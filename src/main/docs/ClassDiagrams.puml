@startuml

package ElevatorControllerInterface {
  class ElevatorControllerInterface{
    - clientId
    - levelNumber
    - destinationLevel[1..10]
    + createOrder()
  }
}

ElevatorControllerInterface .> Floor

Elevator "1" . "10" Floor

class Floor {
    - listOfPeopleWaiting
    - countOfPeopleDelivered
    - floorNumber
}

class Person {
  - sourceLevel
  - destinationLevel
}

package "Elevator" {

  class Elevator {
    - elevatorId
    - direction
    - currentLevel
    - list of person[0..20]
    - SortedSet<Order> remainingOrderQueue
    - BlockingQueue<Order> incomingOrdersQueue
    + insertOrder(destinationLevel)
    + statusUpdate()
    +
  }
  
  enum direction {
    UPWARDS (^)
    DOWNWARDS (\/)
    STATIONARY (-)
  }

}

package ElevatorController {
  class ElevatorController {
    List<Elevator> elevatorList
    List<ElevatorClientInterface> clientList
    - processOrder(sourceLevel, destinationLevel, peopleWaiting, elevatorList)
    + registerOrder(sourceLevel, destinationLevel, peopleWaiting)
  }
}

class ElevatorRecorder {

}

ElevatorRecorder "1" -* "4" Elevator


ElevatorController "1" - "4" Elevator
ElevatorController "1" - "10" ElevatorControllerInterface

Elevator "1" - "1" direction
Elevator "1" o- "20" Person
Floor "1" o- "*" Person

interface Runnable
Elevator -|> Runnable

@enduml